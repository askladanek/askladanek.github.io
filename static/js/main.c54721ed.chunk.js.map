{"version":3,"sources":["components/gator.png","App.js","reportWebVitals.js","index.js"],"names":["translate","textInput","lang1","lang2","fromLang","toLang","console","log","url","API_KEY","encodeURI","EssayForm12","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","fetch","method","headers","Accept","then","res","json","response","data","translations","translatedText","catch","error","preventDefault","Col","Form","Control","as","rows","onChange","Button","variant","size","onClick","block","React","Component","EssayForm22","Button2","isHighlighted","Button3","Button4","App","window","open","Container","fluid","className","Row","Image","src","UFMap","md","btnClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c54721ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gator.1c42849a.png\";","import React from 'react';\nimport { Image, Form, Container, Col, Row, Button} from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport UFMap from './components/gator.png'\nimport { render } from '@testing-library/react';\n\n\nfunction translate(textInput, lang1, lang2) {\n  let fromLang = lang1;\n  let toLang = lang2;\n  if (!textInput) {\n    console.log(\"undefined text input: \", textInput)\n    return (\"Error\");\n  }\n  const API_KEY = \"AIzaSyAe5DVH7T3fzwB\";\n  const API_KEY2 = \"iWSGedgT5nmAoL5DiV-w\";\n\n  let url = `https://translation.googleapis.com/language/translate/v2?key=${(API_KEY+API_KEY2)}`;\n  url += '&q=' + encodeURI(textInput);\n  url += `&source=${fromLang}`;\n  url += `&target=${toLang}`;\n  return (url);\n}\n\n// class EssayForm1 extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       value: 'Geben Sie hier Deutsch ein!'\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n\n//   handleSubmit(event) {\n//     let url =  translate(this.state.value, 'de', 'en');\n//     fetch(url, { \n//       method: 'GET',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//     .then(res => res.json())\n//     .then((response) => {\n//       //console.log(\"response from google: \", response);\n//       //console.log(response.data.translations[0].translatedText);\n//       //return (response.data.translations[0].translatedText)\n//       this.setState({value: response.data.translations[0].translatedText});\n//     })\n//     .catch(error => {\n//       console.log(\"There was an error with the translation request: \", error);\n//     });\n//     event.preventDefault();\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <textarea value={this.state.value} onChange={this.handleChange} />\n//         <input type=\"submit\" value=\"zu EN\" />\n//       </form>\n//     );\n//   }\n// }\n\n// class EssayForm2 extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       value: 'Type English here!'\n//     };\n//     //To handle changes to an alternate 'this', create a parent class and have each update in render\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n\n//   handleSubmit(event) {\n//     let url = translate(this.state.value, 'en', 'de');\n//     fetch(url, { \n//       method: 'GET',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//     .then(res => res.json())\n//     .then((response) => {\n//       //console.log(\"response from google: \", response);\n//       //console.log(response.data.translations[0].translatedText);\n//       //return (response.data.translations[0].translatedText)\n//       this.setState({value: response.data.translations[0].translatedText});\n//     })\n//     .catch(error => {\n//       console.log(\"There was an error with the translation request: \", error);\n//     });\n//     event.preventDefault();\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           <textarea value={this.state.value} onChange={this.handleChange} />\n//         </label>\n//         <input type=\"submit\" value=\"to DE\" />\n//       </form>\n//     );\n//   }\n// }\n\nclass EssayForm12 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Geben Sie hier Deutsch ein!'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    let url = translate(this.state.value, 'de', 'en');\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then((response) => {\n        //console.log(\"response from google: \", response);\n        //console.log(response.data.translations[0].translatedText);\n        //return (response.data.translations[0].translatedText)\n        this.setState({ value: response.data.translations[0].translatedText });\n      })\n      .catch(error => {\n        console.log(\"There was an error with the translation request: \", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Col>\n        <Form>\n          <Form.Control \n            as=\"textarea\" \n            rows={7} \n            value={this.state.value} \n            onChange={this.handleChange} \n          />\n        </Form>\n        <Button\n          variant=\"info\"\n          size=\"lg\"\n          onClick={this.handleSubmit}\n          block>\n            zu Englisch\n        </Button>\n      </Col>\n    );\n  }\n}\n\nclass EssayForm22 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Type English here!'\n    };\n    //To handle changes to an alternate 'this', create a parent class and have each update in render\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    let url = translate(this.state.value, 'en', 'de');\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then((response) => {\n        //console.log(\"response from google: \", response);\n        //console.log(response.data.translations[0].translatedText);\n        //return (response.data.translations[0].translatedText)\n        this.setState({ value: response.data.translations[0].translatedText });\n      })\n      .catch(error => {\n        console.log(\"There was an error with the translation request: \", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Col>\n        <Form>\n          <Form.Control \n            as=\"textarea\" \n            rows={7} \n            value={this.state.value} \n            onChange={this.handleChange} \n          />\n        </Form>\n        <Button \n          variant=\"info\"\n          size=\"lg\"\n          onClick={this.handleSubmit}\n          block>\n            To German\n        </Button>\n      </Col>\n      // <form onSubmit={this.handleSubmit}>\n      //   <label>\n      //     <textarea value={this.state.value} onChange={this.handleChange} />\n      //   </label>\n      //   <input type=\"submit\" value=\"to DE\" />\n      // </form>\n    );\n  }\n}\nclass Button2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHighlighted: true,\n      variant: \"outline-success\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ isHighlighted: !this.state.isHighlighted });\n    if(this.state.isHighlighted){\n      this.state.variant = \"success\";\n    }else{\n      this.state.variant = \"outline-success\";\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.handleChange}\n        variant= {this.state.variant}\n        size=\"lg\">\n        :)\n      </Button>\n    );\n  }\n}\nclass Button3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHighlighted: true,\n      variant: \"outline-danger\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ isHighlighted: !this.state.isHighlighted });\n    if(this.state.isHighlighted){\n      this.state.variant = \"danger\";\n    }else{\n      this.state.variant = \"outline-danger\";\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.handleChange}\n        variant= {this.state.variant}\n        size=\"lg\">\n        :(\n      </Button>\n    );\n  }\n}\nclass Button4 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHighlighted: true,\n      variant: \"outline-secondary\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ isHighlighted: !this.state.isHighlighted });\n    if(this.state.isHighlighted){\n      this.state.variant = \"secondary\";\n    }else{\n      this.state.variant = \"outline-secondary\";\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.handleChange}\n        variant= {this.state.variant}\n        size=\"lg\">\n        ?\n      </Button>\n    );\n  }\n}\nclass App extends React.Component {\n  btnClick() {\n    window.open(\"https://ufl.qualtrics.com/jfe/form/SV_cvHPHdmjbks9YVg\");\n  }\n  render () {\n  return (\n    <h>\n      <Container fluid className =\"App-header\">\n        <Row>\n          <label className = \"App-header-title\">\n            GatorCom\n          </label>\n        </Row>\n        <Row>\n          <label \n          className =\"App-header-by\">\n            By Alex Skladanek\n          </label>\n        </Row>\n      </Container>\n      <Container fluid className =\"App-map\">\n      <Image src={UFMap}\n            className=\"App-component\" fluid/>\n      </Container>\n      <Container fluid className =\"App\">\n          <Col>\n            <EssayForm12/>\n          </Col>\n          <Col>\n            <EssayForm22/>\n          </Col>\n      </Container>\n      <Container className =\"App-button-bottom\">\n      <Col md={1}/>\n        <Col>\n        <Button3></Button3> \n        <label className=\"App-invisible-accent\">\n          .  .\n        </label>\n        <Button4></Button4> \n        <label className=\"App-invisible-accent\">\n          .  .\n        </label>\n        <Button2>\n        </Button2>\n        </Col>\n        <Col>\n        <Button \n          variant=\"outline-primary\"\n          size=\"lg\"\n          onClick={this.btnClick.bind(this)}\n          >\n            End Translations\n        </Button>\n        </Col>\n        <Col>\n        <Button3></Button3> \n        <label className=\"App-invisible-accent\">\n          .  .\n        </label>\n        <Button4></Button4> \n        <label className=\"App-invisible-accent\">\n          .  .\n        </label>\n        <Button2>\n        </Button2>\n        </Col>\n      </Container>\n    </h>\n  );\n  }\n}\n//class Parent extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state ={\n//       //add any global data here\n//     };\n//     //add global onclick and other bind functions here\n//   }\n//   //Define the above functions here\n//   render() {\n//     return (\n//       //define HTML descriptors + Children here. \n//       //If you want to update a child's state, include it in their HTML definition\n//       <div />\n//     );\n//   }\n// }\n// class EssayForm3 extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       value: 'Type here!'\n//     };\n//     //To handle changes to an alternate 'this', create a parent class and have each update in render\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n\n//   handleSubmit(event) {\n//     //this.addMessage()\n//     event.preventDefault();\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Write text to be translated:\n//           <textarea value={this.state.value} onChange={this.handleChange} />\n//         </label>\n//         <input type=\"submit\" value=\"Translate\" />\n//       </form>\n//     );\n//   }\n// }\n\n\n\n// // class App2 extends React.Component {\n// //   state = {\n// //     messagesEn: [\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"}\n// //     ],\n// //     messagesDe: [\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"},\n// //       {text: \"\"}\n// //     ],\n// //     EssayForm3s: [\n// //       {value: \"Hello\"},\n// //       {value: \"\"}\n// //     ]\n// //   }\n\n// //   moveMessagesUp = () => {\n// //     var i = this.state.messagesDe.length\n// //     while (i > 1){\n// //       i--;\n// //       this.state.messagesEn[i] = this.state.messagesEn[i - 1];\n// //       this.state.messagesDe[i] = this.state.messagesDe[i - 1];\n// //     }\n// //     this.state.messagesEn[0] = \"\";\n// //     this.state.messagesDe[0] = \"\";\n// //   }\n\n// //   addMessage = EssayForm3 => {\n// //     this.moveMessagesUp();\n// //     const EssayForm3s = [...this.state.EssayForm3s]\n// //     console.log(EssayForm3s[0].value)\n// //     const textToTrans = EssayForm3s[0].value\n// //     var url = translate(textToTrans, 'de', 'en');\n// //     fetch(url, { \n// //       method: 'GET',\n// //       headers: {\n// //         \"Content-Type\": \"application/json\",\n// //         Accept: \"application/json\"\n// //       }\n// //     })\n// //     .then(res => res.json())\n// //     .then((response) => {\n// //       this.state.messagesEn[0] = response.data.translations[0].translatedText;\n// //     })\n// //     .catch(error => {\n// //       console.log(\"There was an error with the translation request: \", error);\n// //     });\n// //     url = translate(textToTrans, 'en', 'de');\n// //     fetch(url, { \n// //       method: 'GET',\n// //       headers: {\n// //         \"Content-Type\": \"application/json\",\n// //         Accept: \"application/json\"\n// //       }\n// //     })\n// //     .then(res => res.json())\n// //     .then((response) => {\n// //       this.state.messagesDe[0] = response.data.translations[0].translatedText;\n// //     }).then(() => {\n// //       console.log(\"0\",this.state.messagesEn[0],this.state.messagesDe[0])\n// //       console.log(\"1\",this.state.messagesEn[1],this.state.messagesDe[1])\n// //       console.log(\"2\",this.state.messagesEn[2],this.state.messagesDe[2])\n// //     })\n// //     .catch(error => {\n// //       console.log(\"There was an error with the translation request: \", error);\n// //     });\n// //     //The counters Example uses counters as components, i might have to do the same\n// //   }\n// //   render() {\n// //     return (\n// //       //define HTML descriptors + Children here. \n// //       //If you want to update a child's state, include it in their HTML definition\n// //       <div>\n// //         <main className=\"container\">\n// //           <EssayForm3\n// //             onSubmit={this.addMessage()}\n// //             onChange={this.handleChange}\n// //           />\n// //         </main>\n// //       </div>\n// //     );\n// //   }\n\n// // }\n// class App2 extends React.Component {\n//   state = {\n//     messagesEn: [\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"}\n//     ],\n//     messagesDe: [\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"},\n//       {text: \"\"}\n//     ],\n//     EssayForm3s: [\n//       {value: \"Hello\"},\n//       {value: \"\"}\n//     ]\n//   }\n// }\n\n// class FormCustom extends Component {\n//   state = {\n//     value: \"Type here\"\n//   }\n//   handleChange(event) {\n//     //this.setState({value: event.target.value});\n//   }\n//   onSubmit (event) {\n//     event.preventDefault();\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={() => this.props.onSubmit(this.props.formCustom, this.handleSubmit)}>\n//         <label>\n//           Write text to be translated:\n//           <textarea value={this.state.value} onChange={this.handleChange} />\n//         </label>\n//         <input type=\"submit\" value=\"Translate\" />\n//       </form>\n//       </div>\n//     );\n//   }\n// }\n\n// class FormsCustom extends Component {\n//   render() {\n//     const {\n//       onSubmit,\n//       forms\n//     } = this.props;\n//     return (\n//       <div>\n//          <main>\n//           {forms.map(formCustom => (\n//           <FormCustom\n//             key={formCustom.id}\n//             formCustom={formCustom}\n//             onSubmit={onSubmit}\n//           />\n//           ))}\n//         </main>\n//       </div>\n//     );\n//   }\n// }\n\n// class App3 extends Component {\n//   state = {\n//     forms: [\n//       { id: 0, value: \"Type here\" },\n//       { id: 1, value: \"Schrieb heir\" }\n//     ]\n//   };\n//   handleSubmit = (FormCustom, event) => {\n//     const forms = [...this.state.forms];\n//     const index = forms.indexOf(FormCustom);\n//     forms[index] = { ...forms[index] };\n//     let textToTranslate = forms[index].value\n//     console.log(forms[index].value)\n//     let url = translate(textToTranslate, 'en', 'de')\n\n//     fetch(url, { \n//       method: 'GET',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//     .then(res => res.json())\n//     .then((response) => {\n//       console.log(response.data.translations[0].translatedText)\n//       forms[index].value = response.data.translations[0].translatedText;\n//     })\n//     .catch(error => {\n//       console.log(\"There was an error with the translation request: \", error);\n//     });\n//     url = translate(textToTranslate, 'de', 'en');\n//     fetch(url, { \n//       method: 'GET',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//     .then(res => res.json())\n//     .then((response) => {\n//       forms[(0 - index + 1)].value  = response.data.translations[0].translatedText;\n//     })\n//     .catch(error => {\n//       console.log(\"There was an error with the translation request: \", error);\n//     });\n//     this.setState({ forms });\n//     event.preventDefault();\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <main className=\"container\">\n//           <FormsCustom\n//             forms={this.state.forms}\n//             onSubmit={this.handleSubmit}\n//           />\n//         </main>\n//       </div>\n//     );\n//   }\n// }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}